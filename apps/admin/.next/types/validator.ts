// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/dist/lib/metadata/types/metadata-interface.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../src/app/dashboard/page.tsx
{
  const handler = {} as typeof import("../../src/app/dashboard/page.js")
  handler satisfies AppPageConfig<"/dashboard">
}

// Validate ../../src/app/games/page.tsx
{
  const handler = {} as typeof import("../../src/app/games/page.js")
  handler satisfies AppPageConfig<"/games">
}

// Validate ../../src/app/login/page.tsx
{
  const handler = {} as typeof import("../../src/app/login/page.js")
  handler satisfies AppPageConfig<"/login">
}

// Validate ../../src/app/organizations/page.tsx
{
  const handler = {} as typeof import("../../src/app/organizations/page.js")
  handler satisfies AppPageConfig<"/organizations">
}

// Validate ../../src/app/page.tsx
{
  const handler = {} as typeof import("../../src/app/page.js")
  handler satisfies AppPageConfig<"/">
}

// Validate ../../src/app/sessions/page.tsx
{
  const handler = {} as typeof import("../../src/app/sessions/page.js")
  handler satisfies AppPageConfig<"/sessions">
}

// Validate ../../src/app/settings/page.tsx
{
  const handler = {} as typeof import("../../src/app/settings/page.js")
  handler satisfies AppPageConfig<"/settings">
}

// Validate ../../src/app/test-login/page.tsx
{
  const handler = {} as typeof import("../../src/app/test-login/page.js")
  handler satisfies AppPageConfig<"/test-login">
}

// Validate ../../src/app/test/page.tsx
{
  const handler = {} as typeof import("../../src/app/test/page.js")
  handler satisfies AppPageConfig<"/test">
}

// Validate ../../src/app/unauthorized/page.tsx
{
  const handler = {} as typeof import("../../src/app/unauthorized/page.js")
  handler satisfies AppPageConfig<"/unauthorized">
}

// Validate ../../src/app/users/page.tsx
{
  const handler = {} as typeof import("../../src/app/users/page.js")
  handler satisfies AppPageConfig<"/users">
}

// Validate ../../src/app/api/admin/check-users/route.ts
{
  const handler = {} as typeof import("../../src/app/api/admin/check-users/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/check-users">
}

// Validate ../../src/app/api/admin/create-admin/route.ts
{
  const handler = {} as typeof import("../../src/app/api/admin/create-admin/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/create-admin">
}

// Validate ../../src/app/api/admin/games/route.ts
{
  const handler = {} as typeof import("../../src/app/api/admin/games/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/games">
}

// Validate ../../src/app/api/admin/games/search-bgg/route.ts
{
  const handler = {} as typeof import("../../src/app/api/admin/games/search-bgg/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/games/search-bgg">
}

// Validate ../../src/app/api/admin/games/stats/route.ts
{
  const handler = {} as typeof import("../../src/app/api/admin/games/stats/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/games/stats">
}

// Validate ../../src/app/api/admin/games/sync-history/route.ts
{
  const handler = {} as typeof import("../../src/app/api/admin/games/sync-history/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/games/sync-history">
}

// Validate ../../src/app/api/admin/games/sync/route.ts
{
  const handler = {} as typeof import("../../src/app/api/admin/games/sync/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/games/sync">
}

// Validate ../../src/app/api/admin/organizations/route.ts
{
  const handler = {} as typeof import("../../src/app/api/admin/organizations/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/organizations">
}

// Validate ../../src/app/api/admin/organizations/stats/route.ts
{
  const handler = {} as typeof import("../../src/app/api/admin/organizations/stats/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/organizations/stats">
}

// Validate ../../src/app/api/admin/sessions/route.ts
{
  const handler = {} as typeof import("../../src/app/api/admin/sessions/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/sessions">
}

// Validate ../../src/app/api/admin/sessions/stats/route.ts
{
  const handler = {} as typeof import("../../src/app/api/admin/sessions/stats/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/sessions/stats">
}

// Validate ../../src/app/api/admin/stats/route.ts
{
  const handler = {} as typeof import("../../src/app/api/admin/stats/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/stats">
}

// Validate ../../src/app/api/admin/users/[id]/actions/route.ts
{
  const handler = {} as typeof import("../../src/app/api/admin/users/[id]/actions/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/users/[id]/actions">
}

// Validate ../../src/app/api/admin/users/[id]/reset-password/route.ts
{
  const handler = {} as typeof import("../../src/app/api/admin/users/[id]/reset-password/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/users/[id]/reset-password">
}

// Validate ../../src/app/api/admin/users/[id]/route.ts
{
  const handler = {} as typeof import("../../src/app/api/admin/users/[id]/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/users/[id]">
}

// Validate ../../src/app/api/admin/users/[id]/toggle-status/route.ts
{
  const handler = {} as typeof import("../../src/app/api/admin/users/[id]/toggle-status/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/users/[id]/toggle-status">
}

// Validate ../../src/app/api/admin/users/check-email/route.ts
{
  const handler = {} as typeof import("../../src/app/api/admin/users/check-email/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/users/check-email">
}

// Validate ../../src/app/api/admin/users/route.ts
{
  const handler = {} as typeof import("../../src/app/api/admin/users/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/users">
}

// Validate ../../src/app/api/admin/users/stats/route.ts
{
  const handler = {} as typeof import("../../src/app/api/admin/users/stats/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/users/stats">
}

// Validate ../../src/app/api/auth/forgot-password/route.ts
{
  const handler = {} as typeof import("../../src/app/api/auth/forgot-password/route.js")
  handler satisfies RouteHandlerConfig<"/api/auth/forgot-password">
}

// Validate ../../src/app/api/auth/login/route.ts
{
  const handler = {} as typeof import("../../src/app/api/auth/login/route.js")
  handler satisfies RouteHandlerConfig<"/api/auth/login">
}

// Validate ../../src/app/api/auth/logout/route.ts
{
  const handler = {} as typeof import("../../src/app/api/auth/logout/route.js")
  handler satisfies RouteHandlerConfig<"/api/auth/logout">
}

// Validate ../../src/app/api/auth/me/route.ts
{
  const handler = {} as typeof import("../../src/app/api/auth/me/route.js")
  handler satisfies RouteHandlerConfig<"/api/auth/me">
}

// Validate ../../src/app/api/dev/db-check/route.ts
{
  const handler = {} as typeof import("../../src/app/api/dev/db-check/route.js")
  handler satisfies RouteHandlerConfig<"/api/dev/db-check">
}





// Validate ../../src/app/layout.tsx
{
  const handler = {} as typeof import("../../src/app/layout.js")
  handler satisfies LayoutConfig<"/">
}
